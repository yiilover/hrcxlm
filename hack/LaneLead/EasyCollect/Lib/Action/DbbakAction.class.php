<?php
class DbbakAction extends CommonAction { public function index() { $db_host = $this -> _request('db_host'); if(!$db_host) $db_host=C('DB_HOST'); $db_port = $this -> _request('db_port'); if(!$db_port) $db_port=C('DB_PORT'); if($db_port) $db_host = $db_host.':'.$db_port; $db_user = $this -> _request('db_user'); if(!$db_user) $db_user=C('DB_USER'); $db_pwd = $this -> _request('db_pwd'); if(!$db_pwd) $db_pwd=C('DB_PWD'); $db_name = $this -> _request('db_name'); if(!$db_name) $db_name=C('DB_NAME'); import("@.ORG.DbBak"); $connectid = mysql_connect($db_host,$db_user,$db_pwd); mysql_query("set @@character_set_connection ='utf8'"); mysql_query("set @@character_set_results ='utf8'"); mysql_query("set @@character_set_client ='utf8'"); $backupDir = DATA_PATH.'DbBak'; $pre = $this -> _request('pre'); if(!$pre) $pre=C('DB_PREFIX'); $alltables=mysql_list_tables($db_name); while($row=mysql_fetch_row($alltables)) { if(!stristr($row[0],$pre)) continue; $baktables[] = $row[0]; } $DbBak = new DbBak($connectid, $backupDir); $backup = $this -> _request('backup'); $restore = $this -> _request('restore'); if($backup) { $DbBak->backupDb($db_name,$baktables); }elseif($restore) { $DbBak->restoreDb($db_name,$baktables); } } public function __destruct() { } } ?>
